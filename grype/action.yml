name: 'Grype'
description: 'Scan with Grype'
inputs:
  version:
    description: "Grype version to install."
    required: false
    default: "v0.77.0"
  install-only:
    description: "Install the binary only."
    required: false
    default: "false"
  fail-on:
    description: "Fail the action when vulns with a severity >= where found [negligible low medium high critical]."
    required: false
    default: ""
  output:
    description: "Output file"
    required: true
    default: ""
  format:
    description: "Output format [json table cyclonedx]"
    required: false
    default: "table"
  config-file:
    description: "Config-File"
    required: false
    default: ""
  scan-target:
    description: "Target to scan"
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup Grype
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin ${{ inputs.version }}
      shell: sh

    - name: Setup YQ
      if: ${{ inputs.install-only != 'true' }}
      run: |
        curl -sSfL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 > /usr/local/bin/yq
        chmod +x /usr/local/bin/yq
      shell: sh

    - name: Scan for vulnerabilities
      if: ${{ inputs.install-only != 'true' }}
      run: |
        curl -sSfL https://raw.githubusercontent.com/ckotzbauer/actions-toolkit/main/.github/grype.yaml > base.yaml

        if test -f "${{ inputs.config-file }}"; then
          yq eval-all '. as $item ireduce ({}; . *+ $item)' base.yaml ${{ inputs.config-file }} > merged.yaml
          grype ${{ inputs.scan-target }} -c "merged.yaml" -f "${{ inputs.fail-on }}" -o "${{ inputs.format }}" --file "${{ inputs.output }}"
        else
          grype ${{ inputs.scan-target }} -c "base.yaml" -f "${{ inputs.fail-on }}" -o "${{ inputs.format }}"
        fi
      shell: sh

    # TODO: Optionally attest vulnerabilities (#29)
