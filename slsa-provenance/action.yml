name: 'Generate SLSA Provenance'
description: 'Generate SLSA Provenance from artifacts'
inputs:
  action-sha:
    description: "SHA of this action used (needed for extra material)."
    required: true
  images:
    description: "Full image paths to generate provenances for."
    required: false
    default: ""
  artifact-path:
    description: "Path of artifacts"
    required: true
  output:
    description: "Output file"
    required: true
    default: "provenance.json"
  sign:
    description: "Sign provenance with cosign"
    required: false
    default: 'false'
  attest:
    description: "Attest the image with the generated provenance"
    required: false
    default: 'false'
  verify:
    description: "Verify provenance with cosign"
    required: false
    default: 'false'
  cosign-repository:
    description: Custom cosign-repository
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Create additional material
      shell: bash
      run: |
        echo "[{\"uri\": \"git+https://github.com/ckotzbauer/actions-toolkit\",\"digest\": {\"sha1\": \"${{ inputs.action-sha }}\"}}]" > material.json
    - name: Generate provenance
      uses: philips-labs/slsa-provenance-action@69bbe787e5d07547c5f8cd3641e1c3f8e11a6a73
      with:
        arguments: -d --artifact-path ${{ inputs.artifact-path }} --extra-materials material.json --output-path ${{ inputs.output }}

    - name: Sign Provenance
      if: ${{ inputs.sign == 'true' }}
      run: cosign sign-blob --output-signature ${{ inputs.output }}.sig --output-certificate ${{ inputs.output }}.pem ${{ inputs.output }}
      shell: sh
      env:
        COSIGN_EXPERIMENTAL: "1"
        COSIGN_REPOSITORY: ${{ inputs.cosign-repository }}

    - name: Verify Provenance
      if: ${{ inputs.verify == 'true' }}
      run: cosign verify-blob --signature ${{ inputs.output }}.sig --cert ${{ inputs.output }}.pem ${{ inputs.output }}
      shell: sh
      env:
        COSIGN_EXPERIMENTAL: "1"
        COSIGN_REPOSITORY: ${{ inputs.cosign-repository }}

    - name: Attest images with Provenance
      if: ${{ inputs.attest == 'true' && inputs.images != '' }}
      run: echo "${{ inputs.images }}" | grep -v "^$" | while read -r a; do cosign attest -f --predicate ${{ inputs.output }} $a; done
      shell: sh
      env:
        COSIGN_EXPERIMENTAL: "1"
        COSIGN_REPOSITORY: ${{ inputs.cosign-repository }}
