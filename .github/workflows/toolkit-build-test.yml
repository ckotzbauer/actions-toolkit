name: Build and test

on:
  workflow_call:
    inputs:
      platform:
        required: false
        default: "ubuntu-latest"
        type: string
      install-go:
        required: false
        default: false
        type: boolean
      go-version:
        required: false
        default: "1.25.0"
        type: string
      install-node:
        required: false
        default: false
        type: boolean
      node-version:
        required: false
        default: 22
        type: string
      install-dotnet:
        required: false
        default: false
        type: boolean
      dotnet-version:
        required: false
        default: "9.0.x"
        type: string
      install-python:
        required: false
        default: false
        type: boolean
      python-version:
        required: false
        default: "3.13"
        type: string
      install-goreleaser:
        required: false
        default: false
        type: boolean
      goreleaser-version:
        required: false
        type: string
        default: v2.12.0
      install-kubebuilder:
        required: false
        default: false
        type: boolean
      kubebuilder-version:
        required: false
        type: string
        default: 3.1.0
      install-kubectl:
        required: false
        default: false
        type: boolean
      kubectl-version:
        required: false
        type: string
        default: v1.32.3
      install-cosign:
        required: false
        default: false
        type: boolean
      install-awscli:
        required: false
        default: false
        type: boolean
      install-syft:
        required: false
        default: false
        type: boolean
      build-commands:
        required: false
        type: string
        default: ''
      test-commands:
        required: false
        type: string
        default: ''
      build-image:
        required: false
        default: false
        type: boolean
      docker-tag:
        required: false
        type: string
      docker-context:
        required: false
        default: "."
        type: string
      docker-file:
        required: false
        default: ""
        type: string
      docker-push:
        required: false
        default: false
        type: boolean
      docker-load:
        required: false
        default: true
        type: boolean
      docker-platforms:
        required: false
        default: linux/amd64
        type: string
      scan-image:
        required: false
        default: false
        type: boolean
      report-coverage:
        required: false
        default: false
        type: boolean
      coverage-file:
        required: false
        type: string
    secrets:
      encrypted-build-secrets:
        required: false
      encrypted-test-secrets:
        required: false
      ghcr-password:
        required: false

permissions:
  contents: read
  packages: read
  actions: read

jobs:
  build:
    runs-on: ${{ inputs.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - name: Setup Go
        if: ${{ inputs.install-go == true }}
        uses: ckotzbauer/actions-toolkit/setup-go@0.50.1
        with:
          version: ${{ inputs.go-version }}

      - name: Setup Node
        if: ${{ inputs.install-node == true }}
        uses: ckotzbauer/actions-toolkit/setup-nodejs@0.50.1
        with:
          version: ${{ inputs.node-version }}

      - name: Setup Dotnet
        if: ${{ inputs.install-dotnet == true }}
        uses: ckotzbauer/actions-toolkit/setup-dotnet@0.50.1
        with:
          version: ${{ inputs.dotnet-version }}

      - name: Setup Python
        if: ${{ inputs.install-python == true }}
        uses: ckotzbauer/actions-toolkit/setup-python@0.50.1
        with:
          version: ${{ inputs.python-version }}

      - name: Setup Cosign
        if: ${{ inputs.install-cosign == true }}
        uses: sigstore/cosign-installer@dbac2a8edec72ca001e3e9f3e53cd0b98f1eb467
        with:
          cosign-release: 'v2.5.3'

      - name: Setup GoReleaser
        if: ${{ inputs.install-goreleaser == true }}
        uses: goreleaser/goreleaser-action@a08664b80c0ab417b1babcbf750274aed2018fef
        with:
          version: ${{ inputs.goreleaser-version }}
          install-only: true

      - name: Setup Kubebuilder
        if: ${{ inputs.install-kubebuilder == true }}
        uses: RyanSiu1995/kubebuilder-action@7170cb0476187070ae04cbb6cee305e809de2693
        with:
          version: ${{ inputs.kubebuilder-version }}

      - name: Setup AWS CLI
        if: ${{ inputs.install-awscli == true }}
        uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c

      - name: Setup Kubectl
        if: ${{ inputs.install-kubectl == true }}
        uses: azure/setup-kubectl@v3.2
        with:
          version: ${{ inputs.kubectl-version }}

      - name: Setup Syft
        if: ${{ inputs.install-syft == true }}
        uses: ckotzbauer/actions-toolkit/setup-syft@0.50.1

      - name: Build
        if: ${{ inputs.build-commands != '' }}
        env:
          ENCRYPTED_BUILD_SECRETS: ${{ secrets.encrypted-build-secrets }}
        run: ${{ inputs.build-commands }}

      - name: Test
        if: ${{ inputs.test-commands != '' }}
        env:
          ENCRYPTED_TEST_SECRETS: ${{ secrets.encrypted-test-secrets }}
        run: ${{ inputs.test-commands }}

      - name: Report coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        if: ${{ inputs.report-coverage == true }}
        with:
          files: ${{ inputs.coverage-filt }}

      - name: Build image
        if: ${{ inputs.build-image == true }}
        uses: ckotzbauer/actions-toolkit/docker@0.50.1
        with:
          context: ${{ inputs.docker-context }}
          ghcr-password: ${{ secrets.ghcr-password }}
          file: ${{ inputs.docker-file }}
          push: ${{ inputs.docker-push }}
          load: ${{ inputs.docker-load }}
          platforms: ${{ inputs.docker-platforms }}
          tags: |
            ${{ inputs.docker-tag }}

      - name: Scan image
        if: ${{ inputs.scan-image == true }}
        uses: ckotzbauer/actions-toolkit/grype@0.50.1
        with:
          scan-target: ${{ inputs.docker-tag }}
          fail-on: "medium"
          config-file: ".github/grype.yaml"
