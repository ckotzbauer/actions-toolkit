name: Release GoReleaser

on:
  workflow_call:
    inputs:
      branch:
        required: false
        default: main
        type: string
      go-version:
        required: true
        type: string
      version:
        required: true
        type: string
      goreleaser-args:
        required: false
        type: string
      goreleaser-version:
        required: false
        type: string
        default: v1.11.4
      docker-tags:
        required: true
        type: string
      docker-platforms:
        required: false
        default: linux/amd64
        type: string
      sign:
        required: false
        default: true
        type: boolean
      verify:
        required: false
        default: true
        type: boolean
      attest:
        required: false
        default: true
        type: boolean
      sbom:
        required: false
        default: true
        type: boolean
      cosign-repository:
        required: false
        default: ""
        type: string
    secrets:
      token:
        required: true
      pat:
        required: true
      ghcr-password:
        required: false
      dockerhub-user:
        required: false
      dockerhub-password:
        required: false

permissions:
  id-token: write
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Checkout
        uses: actions/checkout@6a84743051be17cee477b0a26bd866b5dba996e4
        with:
          fetch-depth: 0
          token: ${{ secrets.pat }}

      - name: Setup Go
        uses: actions/setup-go@30b9ddff1180797dbf0efc06837929f98bdf7af7
        with:
          go-version: ${{ inputs.go-version }}

      - name: Setup Cosign
        if: ${{ inputs.sign == true }}
        uses: sigstore/cosign-installer@ced07f21fb1da67979f539bbc6304c16c0677e76
        with:
          cosign-release: 'v1.12.1'

      - name: Setup Syft
        uses: ckotzbauer/actions-toolkit/setup-syft@0.21.3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@ff11ca24a9b39f2d36796d1fbd7a4e39c182630a
        with:
          version: ${{ inputs.goreleaser-version }}
          args: release --rm-dist ${{ inputs.goreleaser-args }}
        env:
          GORELEASER_CURRENT_TAG: ${{ inputs.version }}
          GITHUB_TOKEN: ${{ secrets.token }}
          COSIGN_EXPERIMENTAL: 1
          COSIGN_REPOSITORY: ${{ inputs.cosign-repository }}

      - name: Build and push image
        uses: ckotzbauer/actions-toolkit/docker@0.21.3
        with:
          ghcr-password: ${{ secrets.ghcr-password }}
          dockerhub-user: ${{ secrets.dockerhub-user }}
          dockerhub-password: ${{ secrets.dockerhub-password }}
          context: .
          push: true
          sign: ${{ inputs.sign }}
          verify: ${{ inputs.verify }}
          cosign-repository: ${{ inputs.cosign-repository }}
          platforms: ${{ inputs.docker-platforms }}
          tags: ${{ inputs.docker-tags }}

      - name: Generate SBOM
        if: ${{ inputs.sbom == true }}
        uses: ckotzbauer/actions-toolkit/sbom@0.21.3
        with:
          images: ${{ inputs.docker-tags }}
          sign: ${{ inputs.sign }}
          verify: ${{ inputs.verify }}
          attest: ${{ inputs.attest }}
          cosign-repository: ${{ inputs.cosign-repository }}

      - name: Generate hashes
        shell: bash
        id: hash
        run: |
          cd dist/
          echo "::set-output name=hashes::$(find . -type f | xargs sha256sum | base64 -w0)"

      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: assets
          path: |
            dist/
            oci-sbom.json*

  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.2.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      compile-generator: true

  release:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@6a84743051be17cee477b0a26bd866b5dba996e4
        with:
          fetch-depth: 0
          token: ${{ secrets.pat }}

      - name: Generate Changelog
        uses: ckotzbauer/changelog-generator@90d00034ce4ecb51eadef07d8e6d9a182b4eee13
        with:
          release-version: ${{ inputs.version }}
          github-handle: ${{ github.repository }}
          commit-output: commits.md

      - name: Download artifacts
        uses: actions/download-artifact@076f0f7dd036d87e8e04f5f00d614e790308961b
        with:
          path: output

      - name: Output
        run: |
          ls -R output

      - name: Push release
        uses: ckotzbauer/actions-toolkit/push-release@0.21.3
        with:
          version: ${{ inputs.version }}
          branch: ${{ inputs.branch }}
          pat: ${{ secrets.pat }}
          prerelease: ${{ contains(inputs.version, 'alpha') || contains(inputs.version, 'beta') || contains(inputs.version, 'rc') }}
          files: |
            output/assets/dist/*.tar.gz
            output/assets/dist/*.zip
            output/assets/dist/*.txt
            output/assets/dist/*.sig
            output/assets/dist/*.sbom
            output/assets/dist/*.pem
            output/assets/oci-sbom.json*
            output/attestation.intoto.jsonl/attestation.intoto.jsonl
