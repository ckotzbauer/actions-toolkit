name: Release GoReleaser

on:
  workflow_call:
    inputs:
      branch:
        required: false
        default: main
        type: string
      go-version:
        required: true
        type: string
      version:
        required: true
        type: string
      goreleaser-args:
        required: false
        type: string
      docker-tags:
        required: true
        type: string
      docker-platforms:
        required: false
        default: linux/amd64
        type: string
      sign:
        required: false
        default: true
        type: boolean
      attest:
        required: false
        default: true
        type: boolean
      sbom:
        required: false
        default: true
        type: boolean
      provenance:
        required: false
        default: true
        type: boolean
      cosign-repository:
        required: false
        default: ""
        type: string
    secrets:
      token:
        required: true
      pat:
        required: true
      ghcr-password:
        required: false
      dockerhub-user:
        required: false
      dockerhub-password:
        required: false

jobs:
  release:
    permissions:
      id-token: write
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@230611dbd0eb52da1e1f4f7bc8bb0c3a339fc8b7
        with:
          fetch-depth: 0
          token: ${{ secrets.pat }}

      - name: Setup Go
        uses: actions/setup-go@44e221478fc6847752e5c574fc7a7b3247b00fbf
        with:
          go-version: ${{ inputs.go-version }}

      - name: Setup Cosign
        if: ${{ inputs.sign == true }}
        uses: sigstore/cosign-installer@e0b52f38601a0c05e79f2531afffdffaab4a9c47

      - name: Setup Syft
        uses: anchore/sbom-action/download-syft@3626d7d7b13e87ee6c6f9ded3940dea05a3967bc

      - name: Verify base-image
        run: cosign verify --key https://github.com/GoogleContainerTools/distroless/raw/main/cosign.pub gcr.io/distroless/base

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@a80c8fd82d21711db1dd61f87fc80d31b495b1fd
        with:
          version: "v1.3.1"
          args: release --rm-dist ${{ inputs.goreleaser-args }}
        env:
          GORELEASER_CURRENT_TAG: ${{ inputs.version }}
          GITHUB_TOKEN: ${{ secrets.token }}
          COSIGN_EXPERIMENTAL: 1
          COSIGN_REPOSITORY: ${{ inputs.cosign-repository }}

      - name: Build and push image
        uses: ckotzbauer/actions-toolkit/docker@0.6.0
        with:
          ghcr-password: ${{ secrets.ghcr-password }}
          dockerhub-user: ${{ secrets.dockerhub-user }}
          dockerhub-password: ${{ secrets.dockerhub-password }}
          context: .
          push: true
          sign: ${{ inputs.sign }}
          cosign-repository: ${{ inputs.cosign-repository }}
          platforms: ${{ inputs.docker-platforms }}
          tags: ${{ inputs.docker-tags }}

      - name: Generate SBOM
        if: ${{ inputs.sbom == true }}
        uses: ckotzbauer/actions-toolkit/sbom@0.6.0
        with:
          images: ${{ inputs.docker-tags }}
          sign: ${{ inputs.sign }}
          attest: ${{ inputs.attest }}
          cosign-repository: ${{ inputs.cosign-repository }}

      - name: Generate Provenance
        if: ${{ inputs.provenance == true }}
        uses: ckotzbauer/actions-toolkit/slsa-provenance@0.6.0
        with:
          action-sha: "0.6.0"
          images: ${{ inputs.docker-tags }}
          artifact-path: dist/
          sign: ${{ inputs.sign }}
          attest: ${{ inputs.attest }}
          cosign-repository: ${{ inputs.cosign-repository }}

      - name: Generate Changelog
        uses: ckotzbauer/changelog-generator@5cc839eb805d2dbb011ac94989011f73f033e95b
        with:
          release-version: ${{ inputs.version }}
          github-handle: ${{ github.repository }}
          commit-output: commits.md

      - name: Push release
        uses: ckotzbauer/actions-toolkit/push-release@0.6.0
        with:
          version: ${{ inputs.version }}
          branch: ${{ inputs.branch }}
          pat: ${{ secrets.pat }}
          prerelease: ${{ contains(inputs.version, 'alpha') || contains(inputs.version, 'beta') || contains(inputs.version, 'rc') }}
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.txt
            dist/*.sig
            dist/*.sbom
            dist/*.pem
            oci-sbom.json*
            provenance.json*
