name: Release Node.js

on:
  workflow_call:
    inputs:
      branch:
        required: false
        default: main
        type: string
      node-version:
        required: false
        type: string
        default: "22"
      version:
        required: true
        type: string
      build-commands:
        required: true
        type: string
      artifact-path:
        required: false
        default: ""
        type: string
      docker-tags:
        required: false
        type: string
        default: ""
      docker-platforms:
        required: false
        default: linux/amd64
        type: string
      npm:
        required: false
        default: false
        type: boolean
      sign:
        required: false
        default: true
        type: boolean
      verify:
        required: false
        default: true
        type: boolean
      attest:
        required: false
        default: true
        type: boolean
      sbom:
        required: false
        default: true
        type: boolean
      cosign-repository:
        required: false
        default: ""
        type: string
    secrets:
      token:
        required: true
      pat:
        required: true
      ghcr-password:
        required: false
      dockerhub-user:
        required: false
      dockerhub-password:
        required: false
      npm-token:
        required: false

permissions:
  id-token: write
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0
          token: ${{ secrets.pat }}

      - name: Setup Node
        uses: ckotzbauer/actions-toolkit/setup-nodejs@0.50.1
        with:
          version: ${{ inputs.node-version }}

      - name: Setup Cosign
        if: ${{ inputs.sign == true }}
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62
        with:
          cosign-release: 'v2.5.3'

      - name: Setup Syft
        uses: ckotzbauer/actions-toolkit/setup-syft@0.50.1

      # TODO: Verify base-image when Node.js images are signed

      - name: Bump version
        run: |
          jq --arg v ${{ inputs.version }} '.version = $v' package.json > tmp && mv tmp package.json
          jq --arg v ${{ inputs.version }} '.version = $v' package-lock.json > tmp && mv tmp package-lock.json

      - name: Build
        run: ${{ inputs.build-commands }}

      - name: Build and push image
        if: ${{ inputs.docker-tags != '' }}
        uses: ckotzbauer/actions-toolkit/docker@0.50.1
        with:
          ghcr-password: ${{ secrets.ghcr-password }}
          dockerhub-user: ${{ secrets.dockerhub-user }}
          dockerhub-password: ${{ secrets.dockerhub-password }}
          context: .
          push: true
          sign: ${{ inputs.sign }}
          verify: ${{ inputs.verify }}
          cosign-repository: ${{ inputs.cosign-repository }}
          platforms: ${{ inputs.docker-platforms }}
          tags: ${{ inputs.docker-tags }}

      - name: Generate SBOM
        if: ${{ inputs.sbom == true }}
        uses: ckotzbauer/actions-toolkit/sbom@0.50.1
        with:
          images: ${{ inputs.docker-tags }}
          scan-target: "file:package-lock.json"
          sign: ${{ inputs.sign }}
          verify: ${{ inputs.verify }}
          attest: ${{ inputs.attest }}
          cosign-repository: ${{ inputs.cosign-repository }}

      - name: Generate hashes
        shell: bash
        id: hash
        run: |
          cd ${{ inputs.artifact-path }}
          echo "hashes=$(find . -type f | xargs sha256sum | base64 -w0)" >> $GITHUB_OUTPUT

      - name: Upload assets
        uses: actions/upload-artifact@de65e23aa2b7e23d713bb51fbfcb6d502f8667d8
        with:
          retention-days: 1
          name: assets
          path: |
            ${{ inputs.artifact-path }}/
            oci-sbom.json*


  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      compile-generator: true
      private-repository: true

  release:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0
          token: ${{ secrets.pat }}

      - name: Generate Changelog
        uses: ckotzbauer/changelog-generator@bf49105f6839957e36e8fcf15cffacf86e953da9
        with:
          release-version: ${{ inputs.version }}
          github-handle: ${{ github.repository }}
          commit-output: commits.md

      - name: Download artifacts
        uses: actions/download-artifact@abefc31eafcfbdf6c5336127c1346fdae79ff41c
        with:
          path: output

      - name: Output
        run: |
          ls -R output

      - name: Publish NPM package
        if: ${{ inputs.npm == true }}
        uses: JS-DevTools/npm-publish@ad693561f8a5b5d4c76f14407da60aa15cb10f90
        with:
          token: ${{ secrets.npm-token }}
          access: "public"

      - name: Push release
        uses: ckotzbauer/actions-toolkit/push-release@0.50.1
        with:
          version: ${{ inputs.version }}
          branch: ${{ inputs.branch }}
          pat: ${{ secrets.pat }}
          prerelease: ${{ contains(inputs.version, 'alpha') || contains(inputs.version, 'beta') || contains(inputs.version, 'rc') }}
          files: |
            output/assets/oci-sbom.json*
            output/multiple.intoto.jsonl/multiple.intoto.jsonl
